name: Check, build and push an image
description:  Build and push a docker image, if changes in the source repository have occured

inputs:
  check-repository:
    description: 'Which source repository (on GitHub) to check for changes'
    required: true
  check-branch:
    description: 'Which source branch to check for changes'
    required: false
    default: 'master'
  check-days:
    description: 'In which timeframe (in integer days) changes have to occur to trigger a build'
    required: false
    default: 2
  build-branch:
    description: 'Which branch to use for building the image'
    required: false
    default: 'master'
  build-tags:
    description: 'Which tags to use for pushing the image'
    required: true
  push-username:
    description: 'Username to use for pushing the image to docker hub'
    required: true
  push-password:
    description: 'Password to use for pushing the image to docker hub'
    required: true
outputs:
  digest:
    description: "Digest (i.e. hash) of the built image"
    value: ${{ steps.docker_build.outputs.digest }}

runs:
  using: "composite"
  steps:
  - name: Check for recent changes
    id: check_for_changes
    env:
      CHECK_REPOSITORY: ${{ inputs.check-repository }}
      CHECK_BRANCH: ${{ inputs.check-branch }}
      CHECK_DAYS: ${{ inputs.check-days }}
    run: |
      echo "Workflog triggered by $GITHUB_EVENT_NAME"
      commitdate=$(curl -sL "https://api.github.com/repos/$CHECK_REPOSITORY/commits/$CHECK_BRANCH" | jq -r ".commit.author.date")
      commitdays=$(( ( $(date --utc +%s) - $(date --utc -d $commitdate +%s) ) / 86400 ))
      echo "Last commit was $commitdays days ago."
      if [ $commitdays -lt $CHECK_DAYS ] || [ "$GITHUB_EVENT_NAME" = "workflow_dispatch" ]; then
        echo "::set-output name=changes_exist::true"
        echo "Schedule following steps to RUN."
      else
        echo "::set-output name=changes_exist::false"
        echo "Schedule following steps to NOT RUN."
      fi
  - name: Checkout
    if: ${{ steps.check_for_changes.outputs.changes_exist == 'true' }}
    uses: actions/checkout@v2
    with:
      ref: ${{ inputs.build-branch }}
    
  - name: Set up Docker Buildx
    if: ${{ steps.check_for_changes.outputs.changes_exist == 'true' }}
    uses: docker/setup-buildx-action@v1
  - name: Login to DockerHub
    if: ${{ steps.check_for_changes.outputs.changes_exist == 'true' }}
    uses: docker/login-action@v1
    with:
      username: ${{ inputs.push-username }}
      password: ${{ inputs.push-password }}
  - name: Build and push the image
    if: ${{ steps.check_for_changes.outputs.changes_exist == 'true' }}
    uses: docker/build-push-action@v2
    id: docker_build
    with:
      context: .
        push: true
        tags: ${{ inputs.build-tags }}

  - name: Image digest
    if: ${{ steps.check_for_changes.outputs.changes_exist == 'true' }}
    run: echo Image digest is ${{ steps.docker_build.outputs.digest }}
